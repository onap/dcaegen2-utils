<!--
  ~ ================================================================================
  ~ Copyright (c) 2018 AT&T Intellectual Property. All rights reserved.
  ~ ================================================================================
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~ ============LICENSE_END=========================================================
  ~
  -->

<included>

    <!--
     ============================= AUDIT LOG APPENDER ================================
     -->
    <appender name="auditLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="org.onap.dcae.utils.eelf.logger.logback.filter.MarkerFilter">
            <markers>AUDIT_LOG</markers>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <file>${logDirectory}/${auditLogName}.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${logDirectory}/${auditLogName}.%i.log.zip</fileNamePattern>
            <minIndex>${minFileIndex}</minIndex>
            <maxIndex>${maxFileIndex}</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>

        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.onap.dcae.utils.eelf.logger.logback.layout.AuditLogLayout"/>
        </encoder>

    </appender>


    <!--
     ============================= METRIC LOG APPENDER ================================
     -->
    <appender name="metricLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="org.onap.dcae.utils.eelf.logger.logback.filter.MarkerFilter">
            <markers>METRIC_LOG</markers>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <file>${logDirectory}/${metricLogName}.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${logDirectory}/${metricLogName}.%i.log.zip</fileNamePattern>
            <minIndex>${minFileIndex}</minIndex>
            <maxIndex>${maxFileIndex}</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>

        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.onap.dcae.utils.eelf.logger.logback.layout.MetricLogLayout"/>
        </encoder>

    </appender>


    <!--
     ============================= ERROR LOG APPENDER ================================
    -->
    <appender name="errorLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="org.onap.dcae.utils.eelf.logger.logback.filter.MarkerFilter">
            <markers>ERROR_LOG</markers>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <file>${logDirectory}/${errorLogName}.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${logDirectory}/${errorLogName}.%i.log.zip</fileNamePattern>
            <minIndex>${minFileIndex}</minIndex>
            <maxIndex>${maxFileIndex}</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>

        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.onap.dcae.utils.eelf.logger.logback.layout.ErrorLogLayout"/>
        </encoder>

    </appender>


</included>
